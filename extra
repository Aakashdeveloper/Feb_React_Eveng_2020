JavaScript -3
---------------
React => 3 Application
React+Redux = 2 Application
ReactHooks => 1 Application
React+GraphQl => 1 Application
Basic(React native)
>React thunk/react Saga
---------------------
Testing 
---------------
Production
> MERN
> Docker 
> Nginx
-----------------------
Github
------------------------
25-30


> Basic Html/ Css
> JavaScript


https://code.visualstudio.com/ 
https://github.com/ 
https://nodejs.org/en/ 

----------------------------
JavaScript

SPA> single page application


>>>>>>>>><<<<<<<<<<
NodeJs (npm> node package manger)

package.json
> starting file
> contains command to start test build
> contains information of Application
> help to manage packges

JSON => JavaScript Object Notation
Datatype(way to represent data)

[
    {
        "name":"john",
        "class":"react"
    },
    {
        "name":"abc",
        "class":"xyz",
        "phone":87658
    }
]

//////Create package.json/////
**NodeJs must be installed

> Navigate to the folder using cmd
> npm init 
> Answer all questions
> type 'yes'



>>>>>>><<<<<<
Local Packages (local to the folder)
    > Prod dependency
    > Dev dependency

Global Packages ( Global to the system)
(build generate run)


>>>>>>>
Install Local dependency
<<<<<<

> Navigate to the folder using cmd
> npm install <package name>/npm i <package name>/ npm install <package name> --save
>npm install <package name>
> npm i redux --save-dev


>>>>>>Global package<<<<
#Window
>  Run cmd as Admin
>  npm i -g create-react-app

#Mac/Linux
> open your terminal
> sudo npm i -g create-react-app


>>>>>>Setup React App<<<<<<<
#Window
>  Run cmd as Admin
>  npm i -g create-react-app
-----
>  Navigate to the folder using cmd
>  create-react-app myapp
>  cd myapp
>  npm start

#Mac/Linux
>  open your terminal
>  sudo npm i -g create-react-app
-----
>  Navigate to the folder using cmd
>  create-react-app myapp
>  cd myapp
>  npm start

| Hooks Component


Functional       |   ClassBase  
Dumb/Display     |   Logical
Light in weight  |   Heavy as compare to Functional
Cannot Maintain  |   They can Maintain state
State


> Any Data interaction will happen only through state

State & Props

State is local variable

ComponentA    ===>         Component B
State1        Props          State2


<a href=""></a>
<img src=""></a>


parent => child (props)
child => parent(callbacks)


///For Routing////
npm i react-router-dom


////Mock API/////
npm i -g json-server
json-server --watch db.json --port 8900


const abc = () => {
    console.log('aaa')
}



const o = {p: 42, q: true};
const {p: foo, q: bar} = o;
var foo = 44
 
console.log(foo); // 42 
console.log(bar); // true


var a = 10
var b = "my age is "+a
`my age is ${b}`

<div>
    <h1></h1>
    <h2></h2>
</div>

if()
else()


Math.ceil(Math.random()*(max-min)+min)


Math.random()*(10-1)+1

Math.ceil(Math.random()*(10-1)+1)


10.483848
10
11

Math.floor
Math.ceil
Math.round



Token
UserRole

localstorgae ={"tokeen","role"}
cookies


function Counter({initialCount}) {
     const [count, setCount] = useState(initialCount);
      return (<>Count: {count}       <button onClick={() => setCount(initialCount)}>Reset</button>       <button onClick={() => setCount(prevCount => prevCount - 1)}>-</button>       <button onClick={() => setCount(prevCount => prevCount + 1)}>+</button>     </>   ); }  https://reactjs.org/docs/hooks-state.html  import React, { useState } from 'react';  function Example() {   // Declare a new state variable, which we'll call "count"   const [count, setCount] = useState(0);    return (     <div>       <p>You clicked {count} times</p>       <button onClick={() => setCount(count + 1)}>         Click me       </button>     </div>   ); } https://reactjs.org/docs/hooks-reference.html  useEffect Cleaning up an effect Conditionally firing an effect 


       <button onClick={() => setCount((prevCount) => {prevCount - 1})}>-</button>
      <button onClick={() => setCount((prevCount) => {prevCount + 1})}>+</button>


      var count = (a) => { a-1 }
      count(20)

      function Example() {
          // Declare a new state variable, which we'll call "count"   
          const [count, setCount] = useState(0);
          return (
              <div>
              <p>You clicked {count} times</p>
              <button onClick={() => setCount(count + 1)}>Click me</button>
                </div>  );
            }


//Pure component


///
Redux
Flux=-
Relay=-RGR


///
Application build
> npm run build